diff --git a/src/tests/test_sockets.py b/src/tests/test_sockets.py
index 24e59b7..f903bdd 100644
--- a/src/tests/test_sockets.py
+++ b/src/tests/test_sockets.py
@@ -374,7 +374,7 @@ class TestTCPListener:
 
                 client.close()
 
-    @pytest.mark.skipif(sys.platform == 'win32', reason='Not supported on Windows')
+    @pytest.mark.skip(reason="Won't work on our kernel version.")
     async def test_reuse_port(self, family):
         multi1 = await create_tcp_listener(local_host='localhost', family=family, reuse_port=True)
         assert len(multi1.listeners) == 1
@@ -665,7 +665,7 @@ class TestUDPSocket:
                     assert await client.receive() == (b'654321', (host, port))
                     await tg.cancel_scope.cancel()
 
-    @pytest.mark.skipif(sys.platform == 'win32', reason='Not supported on Windows')
+    @pytest.mark.skip(reason="Won't work on our kernel version.")
     async def test_reuse_port(self, family):
         async with await create_udp_socket(family=family, local_host='localhost',
                                            reuse_port=True) as udp:
@@ -755,7 +755,7 @@ class TestConnectedUDPSocket:
                     assert await udp1.receive() == (b'654321', (host, port))
                     await tg.cancel_scope.cancel()
 
-    @pytest.mark.skipif(sys.platform == 'win32', reason='Not supported on Windows')
+    @pytest.mark.skip(reason="Won't work on our kernel version.")
     async def test_reuse_port(self, family):
         async with await create_connected_udp_socket(
                 'localhost', 6000, family=family, local_host='localhost', reuse_port=True) as udp:
